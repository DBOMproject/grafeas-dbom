// Code generated by go-swagger; DO NOT EDIT.

package asset

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// AttachSubAssetReader is a Reader for the AttachSubAsset structure.
type AttachSubAssetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AttachSubAssetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAttachSubAssetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAttachSubAssetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAttachSubAssetForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAttachSubAssetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewAttachSubAssetConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 502:
		result := NewAttachSubAssetBadGateway()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewAttachSubAssetOK creates a AttachSubAssetOK with default headers values
func NewAttachSubAssetOK() *AttachSubAssetOK {
	return &AttachSubAssetOK{}
}

/* AttachSubAssetOK describes a response with status code 200, with default header values.

Asset was successfully attached to the passed subasset by the repository agent
*/
type AttachSubAssetOK struct {
}

func (o *AttachSubAssetOK) Error() string {
	return fmt.Sprintf("[POST /repo/{repoID}/chan/{channelID}/asset/{assetID}/attach][%d] attachSubAssetOK ", 200)
}

func (o *AttachSubAssetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAttachSubAssetBadRequest creates a AttachSubAssetBadRequest with default headers values
func NewAttachSubAssetBadRequest() *AttachSubAssetBadRequest {
	return &AttachSubAssetBadRequest{}
}

/* AttachSubAssetBadRequest describes a response with status code 400, with default header values.

Expected schema for a subasset was not matched
*/
type AttachSubAssetBadRequest struct {
}

func (o *AttachSubAssetBadRequest) Error() string {
	return fmt.Sprintf("[POST /repo/{repoID}/chan/{channelID}/asset/{assetID}/attach][%d] attachSubAssetBadRequest ", 400)
}

func (o *AttachSubAssetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAttachSubAssetForbidden creates a AttachSubAssetForbidden with default headers values
func NewAttachSubAssetForbidden() *AttachSubAssetForbidden {
	return &AttachSubAssetForbidden{}
}

/* AttachSubAssetForbidden describes a response with status code 403, with default header values.

Forbidden to add this subasset (Possibly already attached)
*/
type AttachSubAssetForbidden struct {
}

func (o *AttachSubAssetForbidden) Error() string {
	return fmt.Sprintf("[POST /repo/{repoID}/chan/{channelID}/asset/{assetID}/attach][%d] attachSubAssetForbidden ", 403)
}

func (o *AttachSubAssetForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAttachSubAssetNotFound creates a AttachSubAssetNotFound with default headers values
func NewAttachSubAssetNotFound() *AttachSubAssetNotFound {
	return &AttachSubAssetNotFound{}
}

/* AttachSubAssetNotFound describes a response with status code 404, with default header values.

No channel or repository found for that URI
*/
type AttachSubAssetNotFound struct {
}

func (o *AttachSubAssetNotFound) Error() string {
	return fmt.Sprintf("[POST /repo/{repoID}/chan/{channelID}/asset/{assetID}/attach][%d] attachSubAssetNotFound ", 404)
}

func (o *AttachSubAssetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAttachSubAssetConflict creates a AttachSubAssetConflict with default headers values
func NewAttachSubAssetConflict() *AttachSubAssetConflict {
	return &AttachSubAssetConflict{}
}

/* AttachSubAssetConflict describes a response with status code 409, with default header values.

Conflict with state. Possibly attaching an asset to itself
*/
type AttachSubAssetConflict struct {
}

func (o *AttachSubAssetConflict) Error() string {
	return fmt.Sprintf("[POST /repo/{repoID}/chan/{channelID}/asset/{assetID}/attach][%d] attachSubAssetConflict ", 409)
}

func (o *AttachSubAssetConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAttachSubAssetBadGateway creates a AttachSubAssetBadGateway with default headers values
func NewAttachSubAssetBadGateway() *AttachSubAssetBadGateway {
	return &AttachSubAssetBadGateway{}
}

/* AttachSubAssetBadGateway describes a response with status code 502, with default header values.

Error on repository agent
*/
type AttachSubAssetBadGateway struct {
}

func (o *AttachSubAssetBadGateway) Error() string {
	return fmt.Sprintf("[POST /repo/{repoID}/chan/{channelID}/asset/{assetID}/attach][%d] attachSubAssetBadGateway ", 502)
}

func (o *AttachSubAssetBadGateway) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
