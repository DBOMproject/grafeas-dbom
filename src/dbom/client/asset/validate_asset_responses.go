// Code generated by go-swagger; DO NOT EDIT.

package asset

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// ValidateAssetReader is a Reader for the ValidateAsset structure.
type ValidateAssetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ValidateAssetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewValidateAssetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewValidateAssetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewValidateAssetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 502:
		result := NewValidateAssetBadGateway()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewValidateAssetOK creates a ValidateAssetOK with default headers values
func NewValidateAssetOK() *ValidateAssetOK {
	return &ValidateAssetOK{}
}

/* ValidateAssetOK describes a response with status code 200, with default header values.

Signature validated
*/
type ValidateAssetOK struct {
}

func (o *ValidateAssetOK) Error() string {
	return fmt.Sprintf("[GET /repo/{repoID}/chan/{channelID}/asset/{assetID}/validate][%d] validateAssetOK ", 200)
}

func (o *ValidateAssetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewValidateAssetBadRequest creates a ValidateAssetBadRequest with default headers values
func NewValidateAssetBadRequest() *ValidateAssetBadRequest {
	return &ValidateAssetBadRequest{}
}

/* ValidateAssetBadRequest describes a response with status code 400, with default header values.

Invalid signature
*/
type ValidateAssetBadRequest struct {
}

func (o *ValidateAssetBadRequest) Error() string {
	return fmt.Sprintf("[GET /repo/{repoID}/chan/{channelID}/asset/{assetID}/validate][%d] validateAssetBadRequest ", 400)
}

func (o *ValidateAssetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewValidateAssetNotFound creates a ValidateAssetNotFound with default headers values
func NewValidateAssetNotFound() *ValidateAssetNotFound {
	return &ValidateAssetNotFound{}
}

/* ValidateAssetNotFound describes a response with status code 404, with default header values.

No channel, repository or asset found for that URI
*/
type ValidateAssetNotFound struct {
}

func (o *ValidateAssetNotFound) Error() string {
	return fmt.Sprintf("[GET /repo/{repoID}/chan/{channelID}/asset/{assetID}/validate][%d] validateAssetNotFound ", 404)
}

func (o *ValidateAssetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewValidateAssetBadGateway creates a ValidateAssetBadGateway with default headers values
func NewValidateAssetBadGateway() *ValidateAssetBadGateway {
	return &ValidateAssetBadGateway{}
}

/* ValidateAssetBadGateway describes a response with status code 502, with default header values.

Error on repository agent
*/
type ValidateAssetBadGateway struct {
}

func (o *ValidateAssetBadGateway) Error() string {
	return fmt.Sprintf("[GET /repo/{repoID}/chan/{channelID}/asset/{assetID}/validate][%d] validateAssetBadGateway ", 502)
}

func (o *ValidateAssetBadGateway) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
