// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// TransferAssetRequest TransferAssetRequest
// Example: {"assetID":"ABC01","channelID":"C2","repoID":"DB1","transferDescription":"sold"}
//
// swagger:model TransferAssetRequest
type TransferAssetRequest struct {

	// asset ID
	// Required: true
	AssetID *string `json:"assetID"`

	// channel ID
	// Required: true
	ChannelID *string `json:"channelID"`

	// repo ID
	// Required: true
	RepoID *string `json:"repoID"`

	// transfer description
	TransferDescription string `json:"transferDescription,omitempty"`
}

// Validate validates this transfer asset request
func (m *TransferAssetRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAssetID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateChannelID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRepoID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TransferAssetRequest) validateAssetID(formats strfmt.Registry) error {

	if err := validate.Required("assetID", "body", m.AssetID); err != nil {
		return err
	}

	return nil
}

func (m *TransferAssetRequest) validateChannelID(formats strfmt.Registry) error {

	if err := validate.Required("channelID", "body", m.ChannelID); err != nil {
		return err
	}

	return nil
}

func (m *TransferAssetRequest) validateRepoID(formats strfmt.Registry) error {

	if err := validate.Required("repoID", "body", m.RepoID); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this transfer asset request based on context it is used
func (m *TransferAssetRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *TransferAssetRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TransferAssetRequest) UnmarshalBinary(b []byte) error {
	var res TransferAssetRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
