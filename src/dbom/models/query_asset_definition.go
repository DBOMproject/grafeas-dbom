// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// QueryAssetDefinition QueryAssetDefinition
// Example: {"fields":["documentCreator","documentCreatedDate","documentName","assetManufacturer","assetMetadata","manufactureSignature"],"limit":20,"query":{"$and":[{"assetType":{"$eq":"HardwareComponent"}},{"assetSubType":{"$eq":"CPUUnit"}}]},"skip":0}
//
// swagger:model QueryAssetDefinition
type QueryAssetDefinition struct {

	// fields
	Fields []string `json:"fields"`

	// limit
	Limit int64 `json:"limit,omitempty"`

	// query
	// Required: true
	Query interface{} `json:"query"`

	// skip
	Skip int64 `json:"skip,omitempty"`
}

// Validate validates this query asset definition
func (m *QueryAssetDefinition) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateQuery(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *QueryAssetDefinition) validateQuery(formats strfmt.Registry) error {

	if m.Query == nil {
		return errors.Required("query", "body", nil)
	}

	return nil
}

// ContextValidate validates this query asset definition based on context it is used
func (m *QueryAssetDefinition) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *QueryAssetDefinition) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *QueryAssetDefinition) UnmarshalBinary(b []byte) error {
	var res QueryAssetDefinition
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
